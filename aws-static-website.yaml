AWSTemplateFormatVersion: 2010-09-09

Parameters:
  BucketName:
    Type: String
    Description: The name of the S3 bucket to store website files.

  UseExistingBucket:
    Type: String
    Default: "No"
    AllowedValues:
      - "Yes"
      - "No"
    Description: Is the bucket an existing S3 bucket? If "No", a new one will be created.

  DomainName:
    Type: String
    Default: ""
    Description: OPTIONAL - The domain name for your website (e.g., example.com).

  HostedZoneId:
    Type: String
    Description: OPTIONAL - The hosted zone to add DNS records to (required if DomainName is configured).

  AcmCertificateArn:
    Type: String
    Default: ""
    Description: OPTIONAL - The ARN for your ACM certificate for the domain (required if DomainName is configured).

Conditions:
  CreateNewBucket: !Equals [!Ref UseExistingBucket, "No"]
  UseCustomDomain: !Not [!Equals [!Ref DomainName, ""]]

Resources:
  Bucket:
    Condition: CreateNewBucket
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      AccessControl: Private

  OAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties: 
      OriginAccessControlConfig:
        Name: !Ref BucketName
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases: !If [UseCustomDomain, [!Ref DomainName], !Ref AWS::NoValue]
        ViewerCertificate:
          !If 
            - UseCustomDomain
            - AcmCertificateArn: !Ref AcmCertificateArn
              SslSupportMethod: 'sni-only'
            - CloudFrontDefaultCertificate: true
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          TargetOriginId: !Ref BucketName
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html  
        DefaultRootObject: index.html
        Enabled: true
        Origins:
          - DomainName: !If [CreateNewBucket, !GetAtt Bucket.RegionalDomainName, !Ref BucketName]
            Id: !Ref BucketName
            OriginAccessControlId: !GetAtt OAC.Id
            S3OriginConfig:
              OriginAccessIdentity: ""

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketName
      PolicyDocument:
        Statement:
          Action:
            - s3:GetObject
          Effect: Allow
          Principal: 
            Service: 
              - cloudfront.amazonaws.com
          Resource: !Sub "arn:${AWS::Partition}:s3:::${BucketName}/*"
          Condition: 
            StringEquals:
              AWS:SourceArn: !Sub "arn:${AWS::Partition}:cloudfront::${AWS::AccountId}:distribution/${Distribution}"

  Route53Record:
    Condition: UseCustomDomain
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: CNAME
      TTL: '300'
      ResourceRecords:
        - !GetAtt Distribution.DomainName

Outputs:
  S3BucketURI:
    Description: S3 Bucket URI
    Value: !Sub "s3://${BucketName}"

  DistributionId:
    Description: CloudFront Distribution ID
    Value: !Ref Distribution
  
  CloudFrontWebsite:
    Description: CloudFront Website URL
    Value: !Sub "https://${Distribution.DomainName}"
